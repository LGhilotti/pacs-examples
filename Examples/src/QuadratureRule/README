Examples of a code for numerical quadrature

To make things work you must

go into ../Utility (if you have not already done so) and do
make dynamic DEBUG=no
make install

to install libpacs.so with ll support utilities

go into ../RK45 and do
make clean
make dynamic DEBUG=no
make install

to install the librk54.so library (use static instead of dynamic to
install the static library)

go into ../OneDMesh and do
make clean
make dynamic DEBUG=no
make install

to install the libmesh.so library

go into ../AbstractFactory and do
make install

to install the Factory utilities

baseversion/ Here the basic classes for numerical quadrature,
  including adaptive and Montecarlo.
  make dynamic| static make the dynamica|stati lib
  make exec makes the executable

To run the other versions you HAVE to do in baseVersion/
  make dynamic DEBUG=no
  make install

DynamicIntegrand
   This version allows only to choose an integrand dynamically

AllDynamic This version loads also the rules dynamically.

We use anObject factory specialized from the generic class in AbstractFactory/
We use the Proxy class for autometic registration of the rules in the
factory, so you need the -Wl,-E option when linking the executable. Anyway, the
Makefile is already set up appropriately.

