An example of reference bindigs and also of move semantic.

The first part deals with binding of lvalue and rvalue
references. Note that if there exists a version of the function with a
rvalue reference as parameter, this version is preferred when the
argument is an rvalue.

The second part concern move semantic and it contains two version of a
function taking a std::vector as parameter. In the first version we
have an overloading: two functions of name gvect are defined, one
takes a const Vector & (Vector is an alias to std::vector<double>) and
the other a Vector&&. The latter moves the argument, and since
std::vector implements move semantic the argument is indeed devoid of
its content (moved to the local variable v).

The second version uses the std::forward<T> magic to perform the same
semantic of the two previous versions with just one piece of code!.